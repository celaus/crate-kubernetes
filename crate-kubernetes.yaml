apiVersion: v1
kind: Service
metadata:
  name: crate-discovery
  labels:
    app: crate
spec:
  ports:
  - port: 4200
    name: crate-web
  - port: 4300
    name: cluster
  type: LoadBalancer
  selector:
    app: crate
---
apiVersion: "apps/v1alpha1"
kind: PetSet
metadata:
  name: crate
spec:
  serviceName: "crate-discovery"
  replicas: 3
  template:
    metadata:
      labels:
        app: crate
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
    spec:
      containers:
      - name: crate
        image: crate/crate:latest
        command:
          - /docker-entrypoint.sh
          - -Des.cluster.name=crate
          - -Des.multicast.enabled=false
          - -Des.discovery.type=srv
          - -Des.discovery.zen.minimum_master_nodes=${EXPECTED_NODES}
          - -Des.gateway.recover_after_nodes=${EXPECTED_NODES}
          - -Des.gateway.expected_nodes=${EXPECTED_NODES}
          - -Des.discovery.srv.query=_cluster._tcp.crate-discovery.default.svc.cluster.local
        volumeMounts:
            - mountPath: /data
              name: data
        resources:
          limits:
            memory: 2Gi
        ports:
        - containerPort: 4200
          name: db
        - containerPort: 4300
          name: cluster
        env:
        - name: CRATE_HEAP_SIZE
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
        - name: EXPECTED_NODES
          value: "3"
      volumes:
        - name: data
          emptyDir:
            medium: "Memory"
